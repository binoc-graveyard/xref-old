#!/usr/bin/perl
# $Id: diff,v 1.2 2006/12/07 04:59:38 reed%reedloden.com Exp $

# diff --	Display diff output with markup.
#
#	Arne Georg Gleditsch <argggh@ifi.uio.no>
#	Per Kristian Gjermshus <pergj@ifi.uio.no>
#
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

######################################################################

use lib 'lib';
use SimpleParse;
use LXR::Common;
use LXR::Config;
use DB_File;


sub htmlsub {
    my ($s, $l) = @_;
    my @s = split(/(<[^>]*>|&[\#\w\d]+;?)/, $s);
    $s = '';
    
    while (@s) {
	my $f = substr(shift(@s), 0, $l);
	$l -= length($f);
	$s .= $f;
	$f = shift(@s);
	if ($f =~ /^&/) {
	    if ($l > 0) {
		$s .= $f;
		$l--;
	    }
	} else {
	    $s .= $f;
	}
    }
    $s .= ' ' x $l;
    return $s;
}

my $file2;

sub treeoption {
   my ($tree, $defaulttree, $novalue) = @_;
   my $value=" value='$tree'";
   my $selected;
   if ($tree eq $defaulttree) {
       $selected = ' selected=1';
       $value = '' if $novalue;
   }
   return " <option$selected$value>$tree</option>\n";
}
sub printdiff {
    unless (0 && $diffvar) {
        my @similartrees = ();
        my @othertrees = ();
        my @treelist = @{$Conf->{'trees'}};
        foreach my $othertree (@treelist) {
            my $otherpath = $Conf->{'treehash'}{$othertree}.'/'.$Path->{'virt'}.'/'.$Path->{'file'};
            if (-e $otherpath) {
                push @similartrees, $othertree;
            } else {
                push @othertrees, $othertree;
            }
        }
        print(qq{<form name='diff' id='diff'>
Base file to compare: <input name=file size=60 value="$Path->{'virt'}$Path->{'file'}">
in tree <select name=tree id=tree>
});
foreach my $othertree (@treelist) {
    print treeoption($othertree, $Conf->{'treename'}, 1);
}
print(qq{
</select>
<br>
Please select the other tree against which you wish to
compare this file:
<select name='diffvar' id='diffvar'>
});
if (scalar @similartrees) {
print " <option value=''>--(this path)--</option>
";
foreach my $othertree (@similartrees) {
    print treeoption($othertree, $diffvar);
}
}
if (scalar @othertrees) {
print " <option value=''>--(another path)--</option>
";
foreach my $othertree (@othertrees) {
print treeoption($othertree, $diffvar);
}
}
print qq{</select>
<br>
You can
};
print "also " if (scalar @similartrees > 1);
print qq{
compare against a different file: <input name=file2 size=60 value="$file2">

<hr>
<input type=submit>
</form>
};

	return unless $diffvar;
    }

    unless ($Path->{'file'}) {
	print("<h3 align=center>Diff not yet supported for directories.</h3>\n");
	return;
    }

    $origvirt = $Path->{'virt'}.$Path->{'file'};
    $origreal = $Path->{'real'}.$Path->{'file'};

    $origval = $Conf->variable($diffvar);
    $Conf->variable($diffvar,$diffval);
    $file2 ||= $Path->{'virt'}.$Path->{'file'};
    $diffvirt = $file2;
    $diffreal = $Conf->{'treehash'}{$diffvar}.$diffvirt;
    $Conf->variable($diffvar,$origval);

#    print("<h3>Diff of $origvirt -> $diffvirt</h3>\n");
#    print("<h3>($origreal -> $diffreal)</h3>\n");

    # FIXME: Check existence of $origreal & $diffreal.

    &fflush;
    unless (-f  $origreal && -f $diffreal) {
        print "<h1>Could not find one of the specified files</h1>";
        return;
    }
    unless (open(DIFF, "-|")){
	open(STDERR, ">&STDOUT");
	exec('diff', '-U0', $origreal, $diffreal);
	print "*** Diff subprocess died unexpectedly: $!\n";
	exit;
    }
    

    while (<DIFF>) {
	if (($os, $ol, $ns, $nl) = 
	    /@@ -(\d+)(?:,(\d+)|) \+(\d+)(?:,(\d+)|) @@/) {
	    $os++ if $ol eq '0';
	    $ns++ if $nl eq '0';
	    $ol = 1 unless defined($ol);
	    $nl = 1 unless defined($nl);

	    $bo = $os + $ofs;
	    if ($ol < $nl) {
		$ofs += $nl - $ol;

		$dir = '&gt;&gt;';
		$ms  = $nl - $ol;
		$ml  = $ol;
		$orig{$os+$ol} = $ms;
	    } else {
		$dir = '&lt;&lt;';
		$ms  = $ol - $nl;
		$ml  = $nl;
		$new{$ns+$nl} = $ms;
	    } 
	    foreach (0..$ml - 1) {
		$chg{$bo + $_} = '!!';
	    }
	    foreach (0..$ms - 1) {
		$chg{$bo + $ml + $_} = $dir;
	    }

	}
    }
    close(DIFF);


        my $path = $diffvirt;
        $path =~ s|([^-a-zA-Z0-9.+\@/_\r\n])|sprintf("%%%02X", ord($1))|ge;
        $path = qq{<a href="../$diffvar/source$path">$path <i>($diffvar)</i></a>};
    print("<h1>Diff markup</h1>\n",
	  "<h3>Differences between ",

	  &fileref("$origvirt <i>(".
		   $Conf->{'treename'}.")</i>", $origvirt, undef, ""),
	  " and ",
          $path,
	  "</h3><hr>\n");

#	  "<table width=\"100%\" border=0 cellpadding=0><tr><td>",
#
#	  &fileref("<b>$origvirt <i>(".$Conf->vardescription($diffvar).
#		   " $origval)</i></b>", $origvirt, undef, "$diffvar=$origval"),
#	  "<hr></td>\n<td></td>\n<td>",
#
#	  &fileref("<b>$diffvirt <i>(".$Conf->vardescription($diffvar).
#		   " $diffval)</i></b>",$diffvirt, undef, "$diffvar=$diffval"),
#	  "<hr></td>\n</tr></table>\n");


    open(FOO, $origreal);
    $orig = '';
    &markupfile(\*FOO, $Path->{'virt'}, $Path->{'file'}, 
		sub { $orig .= shift });
    $len = $.+$ofs;
    close(FOO);

    $Conf->variable($diffvar, $diffval);

    open(FOO, $diffreal);
    $new = '';
    &markupfile(\*FOO, $Conf->mappath($Path->{'virt'}), $Path->{'file'}, 
		sub { $new .= shift });
    close(FOO);

    $Conf->variable($diffvar, $origval);

    $i = 1; $orig =~ s/^/"\n" x ($orig{$i++})/mge;
    $i = 1; $new  =~ s/^/"\n" x ($new{$i++})/mge;

    @orig = split(/\n/, $orig);
    @new  = split(/\n/, $new);

    print("<pre>");
    foreach $i (0..$len) {
	$o = &htmlsub($orig[$i], 50);
#	$n = &htmlsub($new[$i], 999);
	$n = $new[$i];

#	print("<tr><td><code>$o</code></td>".
#	      "<td><font color=red> ", $chg{$i+1}, " </font></td>".
#	      "<td><code>$n</code></td></tr>\n");
	print("$o <font color=red>", ($chg{$i+1} || "  "), "</font> $n\n");
    }
    print("</pre>");

#    print("</td></tr></table>");
}


($Conf, $HTTP, $Path, $head) = &init;

my $tree = $HTTP->{'param'}->{'tree'};
$diffvar = $HTTP->{'param'}->{'diffvar'};
$diffval = $HTTP->{'param'}->{'diffval'};
$file2 = $HTTP->{'param'}->{'file2'};
if ($file2 ne '') {
  if ($file2 =~ m{^//([^/]+)(/.*|$)}) {
    ($diffvar, $file2) = ($1, $2);
  } elsif ($file2 !~ m{^/}) {
    $file2 = '/'.$file2;
  }
}

if (1) {
if ($file2 ne $HTTP->{'param'}->{'file2'} || $tree) {
my @tail = ();
push @tail, "file=".$Path->{'virt'}.$Path->{'file'} if $Path->{'file'} ne '';
push @tail, "file2=".$file2 if $file2 ne '';
push @tail, "diffvar=$diffvar" if $diffvar ne '';
push @tail, "diffval=$diffval" if $diffval ne '';
my $tail = $#tail >= 0 ? '?' . join "&", @tail : '';
my $newtree = $Conf->{'treename'};
 if ($tree ne $newtree) {
    my @treelist = @{$Conf->{'trees'}};
    foreach my $othertree (@treelist) {
        $newtree = $tree, last if $othertree eq $tree;
    }
 }
$head .= "Refresh: 0; url=../$newtree/diff$tail
";

}
}
print "$head
";

&makeheader('diff');
&printdiff;
&makefooter('diff');


